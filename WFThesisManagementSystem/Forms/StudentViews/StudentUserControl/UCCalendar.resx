<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="ptbPrevious.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2oe1C4TZ2lMAAAAASUVORK5CYII=
</value>
  </data>
</root>