<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbReload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABA1JREFUaEPtmUtoE1EUhuP7/cBXrYZmJtYq1ZXvlS5E0K0r3fioirgQhSpKFepC
        qFgfxGYmhgq6qljoqhvXgrhzZSuKIMVHLa1t505SbYWO/5meSSaThrwm0wbywaGTOfdx7r3nnHvv1Feh
        QgUXaDbmBlTtgKyKJknVuyRVfJBVfVhSxISsiD/4+0tW9B48vwqq4mbwaXyPzzDmcO2ZozYU90uK3gLD
        vsNgIx/BoPow2Ltyu17FzXnHpjZtLYyIwIhxp2F5C1YIEgpGh1dx8ylg5e7wozsEVP0EOh5KM6RoEf1B
        RRznbkzIeNLxz+I41GzMR2OR1E6TAnfQ4PsdMOS8rMT31obE+t1RY0FtyFgUVPUNUljbL0XERZTtRFnd
        Wd8URUyifqvZFxtPwiYUjv+hsQS+3p3SGQuM+SSrWkN11FjKxbNCZRHMl9Dmlwxt9tp/c7XCoNmY3ngx
        hr+NpOeieUOrg1m/ZcZBWvtJ4eKFgQbS3AYD+gy32MlFiqamLbYLLvPV2Y8lXCx/OGBTG1TEe/JvLuIa
        khJ7kNYXCxfJD06VKdmGZr4UxtsDdjrhYvmBig7XEWNuuo1FNuNJuGjuTO2waZtUI6tdIxfjSbh47sBV
        WuwNUKosJtt4S6cxD4HqONtoDayd/UydKlNmX8tnk5pxEKxNqQMQHawqDzDjXfYB0NmGVeUBX0aSA8DB
        jFXlAVLbb/sA6qJiHau8B7c2uvAEomI7xWYwrB9mTWac+b++01jIKs8xD3s2W+Adf1mVmdk0AOrbbgvZ
        xqrMoFCYLhWo0CipsdN0KWGV51DfUlhcwMzfxt4UwgbbzqoKFXICxxp+KhwKpJkI5MDjkdXw+UFINy47
        pzJ9dsmI3KbVIZDvIagH0Mhlfu0ZuA1etWcgSC+rsoOIP2evjEH0eb0KQUU7SyuQsEHVrrMqO/720TWo
        LOyDoMsHqz2jqrV/GVLoDaT1H3TF5de5wXuBfRUm6KbGak8paC+qDQ2tJNcxjVd1HeeQk6wqGf5IfHMg
        rJ3hn8VDhye4zsdSXOadBMKxjZgs64tc1LUTQKaGtj0bXMGPriBH9CPw9388APr+9NrtPhJsCes70MkI
        Bbab2YnOPYkBqHpnST4kUGaA4T1WRxQntE/kMxDepK7A4IP8KgFW4RFm/6Uru/B0oPEXtlliEf1OV6NP
        6oHnxmLnwOrDA8sTKVrR3/HrJM3G3JJ+wkGwHbWykyUwqIXVU9BNyvbFmVaNNSbIam8tHbXHr72DUixm
        7z6lVxg6GYxoW1llUhONVVsGklB6ZJUJzjbXLB0G/4Zfew/t2NPlbee3JQp6VpnUPBmR4evfKAmQq/Hr
        2UNAjR3DyvwkN4K7jcuR0X2sSjIb/s1aoULZ4/P9B/klMzPI/UyWAAAAAElFTkSuQmCC
</value>
  </data>
</root>